#+title: Todo

* beehive
** [X] init plugin
CLOSED: [2022-07-20 Wed 15:17]
** machine
*** [X] write state machine abstraction
CLOSED: [2022-07-22 Fri 00:38]
*** [ ] documentation/visualization for state machine flow
how do we really see what the behaviors are like
could we show them all at once, and see when one starts to deviate?
i see a scene for each scene transition, showing them all at once, or sequentially
*** [ ] tests for state machine guarantees
** tree
*** [ ] write behavior tree abstraction
** goat
*** [ ] write goap abstraction
*** [ ] impl tests with overworked examples
michael shouting "This is agreegous" every 30s
mixed with some other made-up word-shout-outs

*** goals
- label
- priority - int
- reward - some state definition

*** actions
- label
- requirements - some state def
- result - change/update to a state def
- cost - int

*** the rest is path-finding?
or some other algorithm?

I think there's trouble sharing global context at different points in the algo
*** does this end up boiling down to a state machine?
might just be figuring out what state to put the user in

i.e. it's a finite-state-machine for actions
the 'states' (actions) fight to be current

but they really have little say

the goals algorithm could lean heavily/greedily into the high priority

though they do weigh-in by being traversed

seems like each action needs to know about all the others
or, the goal-machine needs to use a hash-map of edges
this feels like an [[id:d7e2a0a9-b6cc-4ec7-abd3-bb6c74b1933f][advent of code]] question

*** [ ] write the tests first
what should that API be?
who should it be asserted on?
* trolley
** [X] init plugin
CLOSED: [2022-07-20 Wed 15:13]
** [ ] unit tests for Trolley.gd
** [ ] writing out an input mapping
should be able to just click yes to get WASD and HJKL for movement
or just make it better - show a keyboard when asking for input?

is there a big keyboard visualization for showing keys we can re-use?
maybe ergodox?
** [ ] remapping flows
** [ ] editable keyboard/control visualization of some kind
* navi
** [X] init plugin
CLOSED: [2022-07-20 Wed 15:12]
** [X] basic menu support
CLOSED: [2022-07-22 Fri 18:41]
** [X] basic pause menu
CLOSED: [2022-07-22 Fri 18:41]
** [ ] add tests for pause menu
** [ ] some high-level integration tests for dino itself
load main-menu/load-level/pause-and-return-to-main/loop-three more times

maybe learn/set an example for the tests we can write in godot games
** [ ] menu keyboard navigation
with trolley inputs
ui_up/ui_down/ui_left/ui_right?

** [ ] add basic Navi autoload for loading scenes
** [ ] scanning for opt-in scenes?
or a menu with checkboxes
** [ ] consider a menu-y rofi filter ui
maybe there are built-ins for this
* console
** [ ] in-game console for running available funcs
needs helpers like get-nodes, defaults for params, tab-completion, etc
* dj
** [X] init plugin
CLOSED: [2022-07-20 Wed 15:14]
** [ ] add basic sounds/music autoload
** [ ] include helpers for resuming songs across scene nav
** [ ] ui showing what sounds/songs are used in the game
** [ ] should be able to play/listen to a song, then drag it as a resource
so i'm not reading bs sound file names when trying to assign to an audio stream
maybe i'm doing this wrong?
* tyle
** [X] init plugin
CLOSED: [2022-07-20 Wed 15:16]
** [ ] add tileSetTools script
* thanks
** [ ] init plugin
** [ ] add basic credits node type
* [X] add GUT and basic testing flow
CLOSED: [2022-07-21 Thu 22:25]
* bb-godot
** [ ] unit test framework
** watch
*** worth adding GUT unit test re-running on save?
maybe opt-in?
** pixels
*** [ ] tests for aseprite command
*** [ ] read aseprite command from ENV var
** addons
*** [X] UI confirming addon dirs exist
CLOSED: [2022-07-22 Fri 14:27]
*** [X] UI showing git-status of all addons
CLOSED: [2022-07-22 Fri 14:27]
*** [ ] read packages local repo
*** [ ] fully clone from github/gitlab/etc
*** [ ] support cloning a local version with a git-hash
*** [ ] update godot project settings file
(auto-enable the plugin)
might need to reload godot, but i usually have to do that anyway
** [X] build for web
CLOSED: [2022-07-20 Wed 23:49]
** [X] deploy to s3
CLOSED: [2022-07-20 Wed 23:49]
** [ ] document example bb.edn consumer
* [ ] consider CI for testing
