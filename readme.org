#+title: dino

My library for Godot addons that haven't earned their wings just yet,
and a godot game that tries to use them all.

'Dino' sort of comes from 'demo', but it provides a punch of personality.

Also it gives us a cast of characters to pull from.

These are intended to speed up prototyping and game-jam workflows, but should
also be useful in longer-running projects.

* addons
** beehive
For working with state machines, behavior trees, maybe GOAP
*** basic state machine abstraction
** trolley
For handling controls inputs and remapping.
*** Trolley autoload with `move_dir()` helpers
returns a normalized vector according to `move_{left,up,right,down}` input actions
** navi
Basic menus, pausing, and credits, plus a scene loader for navigating between
them all.
*** NaviMenu
supporting ~add_menu_item({label: "Blah", obj: self, method: "some_func"})~
** dj
For sounds and music management, such as background music that is maintained
across scene transitions.
** tyle
Tools scripts and ui to improve on Godot's TileSet UI gap.
Includes some basic auto-tiles to speed up prototyping.
** thanks
A simple Credits scene that reads from a .txt file
* bb-godot
Utilities for managing Godot Projects using Babashka (Clojure)

- auto-exporting from aseprite
- building a local web build
- deploying to s3
- installing addons from github

** `bb watch`
A file watcher that runs other commands, which for now is just `bb pixels`.
** `bb pixels`: Aseprite export
and exports *.aesprite files as pngs, using the aseprite
binary.
** `bb addons`
An quick status check for your addons-map
** `bb install-addons`
An approximation of a dependency manager
Clones and symlinks godot addons,
using a clojure map as the manifest

Here's a bit of the current bb.edn for this project

#+begin_src clojure
{:tasks
 {:requires ([bb-godot.tasks :as tasks])

  install-addons
  (tasks/install-addons
    {:behavior_tree :kagenash1/godot-behavior-tree
     :gut           :bitwes/Gut})}}
#+end_src

A project consuming dino's addons might look like:

#+begin_src clojure
{:tasks
 {:requires ([bb-godot.tasks :as tasks])

  install-addons
  (tasks/install-addons
    {:behavior_tree :kagenash1/godot-behavior-tree
     :gut           :bitwes/Gut
     :navi          :russmatney/dino
     :tyle          :russmatney/dino
     :beehive       :russmatney/dino})}}
#+end_src
** `bb install-script-templates`
Copy templates from external paths into your project

I needed this one time, tho it seems like addons should do this themselves?
Maybe going through the asset library works that way?
** `bb build-web`: Build project for web
Build your project, for web.

Builds using godot's HTML5 template, in the ~./dist~ directory.
** `bb deploy-web <s3-bucket>`: Deploy project to s3
Deploy a project to an s3 bucket.

Depends on a working and logged-in ~aws~ cli tool.
** `bb zip`: Zip project
zip the ~./dist~ dir into a ~dist.zip~, which can be uploaded to itch.io

*** [ ] look into whatever `butler` is
maybe could use a clojure wrapper
